openapi: 3.0.3
info:
  title: Swagger MS ORDER API - OpenAPI 0.0.1
  description: |-
    API para controle de pedidos e itens.
    
    - [Repositório da API](https://github.com/rafinhaLQ/Avaliacao-Individual)
  contact:
    name: API suporte
    url: https://www.linkedin.com/in/rafaelluzdequeiroz/
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
    description: API local
tags:
  - name: Pedido
    description: Endpoints dos pedidos.
  - name: Item
    description: Endpoints dos itens.
paths:
  /pedidos:
    post:
      tags:
        - Pedido
      summary: Adiciona um novo pedido.
      description: Adicionar um novo pedido no banco.
      operationId: addOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequestDTO"
      responses:
        "200":
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseDTO"
        "400":
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponseDTO"

    get:
      tags:
        - Pedido
      summary: Listar todos pedidos.
      description: Retorna uma lista de pedidos.
      operationId: getOrders
      parameters:
        - name: cpf
          in: query
          schema:
            type: string
          description: Filtrar os pedidos pelo cpf de quem realizou o pedido.
        - name: sort
          in: query
          schema:
            type: string
          description: Filtrar os pedidos através de um atributo especifico, em ordem crescente ou decrescente.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page_OrderResponseDTO"

  /pedidos/{idOrder}:
    get:
      tags:
        - Pedido
      summary: Procura um pedido pelo ID.
      description: Retorna apenas um pedido.
      operationId: getOrderById
      parameters:
        - name: idOrder
          in: path
          description: ID do pedido para buscar.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseDTO"
        "404":
          description: PEDIDO NÃO ENCONTRADO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponseDTO"

    patch:
      tags:
        - Pedido
      summary: Atualiza os itens de um pedido existente.
      description: Atualiza os itens de um pedido existente pelo ID.
      operationId: updateItems
      parameters:
        - name: idOrder
          in: path
          description: ID do pedido para atualizar os itens.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: number
                format: double
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseDTO"
        "400":
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponseDTO"
        "404":
          description: PEDIDO NÃO ENCONTRADO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponseDTO"
                
    put:
      tags:
        - Pedido
      summary: Atualiza um pedido existente.
      description: Atualiza um pedido existente pelo ID.
      operationId: updateOrder
      parameters:
        - name: idOrder
          in: path
          description: ID do pedido para atualizar.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderUpdateRequestDTO"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponseDTO"
        "400":
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponseDTO"
        "404":
          description: PEDIDO NÃO ENCONTRADO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponseDTO"

    delete:
      tags:
        - Pedido
      summary: Remove um pedido.
      description: Remove um pedido pelo ID.
      operationId: deleteOrder
      parameters:
        - name: idOrder
          in: path
          description: ID do pedido para remover
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: PEDIDO NÃO ENCONTRADO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponseDTO"
                
  /itens:
    post:
      tags:
        - Item
      summary: Adiciona um novo item.
      description: Adicionar um novo item no banco.
      operationId: addItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequestDTO"
      responses:
        "200":
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemResponseDTO"
        "400":
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExceptionResponseDTO"

    get:
      tags:
        - Item
      summary: Listar todos itens.
      description: Retorna uma lista de itens.
      operationId: getItems
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Page_ItemResponseDTO"

components:
  schemas:
    OrderRequestDTO:
      type: object
      properties:
        cpf:
          type: string
        itemsIds:
          type: array
          items:
            type: number
            format: double
        cep:
          type: string
        number:
          type: integer
          format: int32
          
    OrderUpdateRequestDTO:
      type: object
      properties:
        cpf:
          type: string
        cep:
          type: string
        number:
          type: integer
          format: int32
    
    OrderResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cpf:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemResponseDTO"
        address:
          $ref: "#/components/schemas/AddressResponseDTO"
          
    ItemRequestDTO:
      type: object
      properties:
        name:
          type: string
        creationDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        value:
          type: number
          format: double
        description:
          type: string
          
    ItemResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        creationDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        value:
          type: number
          format: double
        description:
          type: string
          
    AddressResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        street:
          type: string
        number:
          type: integer
          format: int32
        district:
          type: string
        city:
          type: string
        state:
          type: string
        cep:
          type: string
          
    Page_OrderResponseDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/OrderResponseDTO"
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                sorted:
                  type: boolean
                unsorted:
                  type: boolean
                empty:
                  type: boolean
            pageNumber:
              type: integer
              format: int32
            pageSize:
              type: integer
              format: int32
            offset:
              type: integer
              format: int32
            paged:
              type: boolean
            unpaged:
              type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          type: object
          properties:
            sorted:
              type: boolean
            unsorted:
              type: boolean
            empty:
              type: boolean
        empty:
          type: boolean
  
    Page_ItemResponseDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ItemResponseDTO"
        pageable:
          type: object
          properties:
            sort:
              type: object
              properties:
                sorted:
                  type: boolean
                unsorted:
                  type: boolean
                empty:
                  type: boolean
            pageNumber:
              type: integer
              format: int32
            pageSize:
              type: integer
              format: int32
            offset:
              type: integer
              format: int32
            paged:
              type: boolean
            unpaged:
              type: boolean
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int32
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          type: object
          properties:
            sorted:
              type: boolean
            unsorted:
              type: boolean
            empty:
              type: boolean
        empty:
          type: boolean

    ExceptionResponseDTO:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: string